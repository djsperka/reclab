const maxQueue% := 100;
var iQueue%[maxQueue%];
var nQueue%;                ' Number of items in queue
var iHead%:=-1;             ' Position of head of queue
var iTail%:=-1;             ' Position of tail of queue (next available pos)


' Initialize queue
var i%;
ArrConst(iQueue%, -1);
for i% := 0 to 10 do
    iQueue%[i%] := i%;
    next;
iHead% := 0;
iTail% := 11;


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 
' QEmpty - returns 1(0) if queue is (not) empty.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
var QEmpty%()
var ireturn% := 0;
if iHead%<0 then ireturn% := 1; endif;
return ireturn%;
end;    

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' QPop
' Pop (remove) the value off the front of the queue. 
' Returns the value removed, or -1 if queue is empty.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

func QPop%()
var ireturn% := -1;
if QEmpty%() <> 0 then
    ' remove item, advance head.
    iQueue%[iHead%] = -1;
    iHead% += 1;
    if iHead% = maxQueue% then iHead% := 0; endif;
    ' if Head is same as tail, then queue is empty
    if iHead% = iTail% then
        iHead% := -1;
        iTail% := -1;
    endif
endif
end;

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'
' QFront - returns the value at the head of the queue, -1 if empty.
func QFront%()
var ivalue% := -1;
if QEmpty%() = 0 then ivalue% := iQueue%[iHead%]; endif;
return ivalue%;
end;

func QPushBack%(ivalue%)
if iTail% < maxQueue%-1 then
    iTail% += 1;
    iQueue%[iTail%] = ivalue%;
else
    ' 